<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="buttonOK.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonCancel.Text" xml:space="preserve">
    <value>Anuluj</value>
  </data>
  <data name="buttonCancel.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonUpdate.Text" xml:space="preserve">
    <value>Sprawdź teraz</value>
  </data>
  <data name="buttonUpdate.ToolTip" xml:space="preserve">
    <value>Sprawdza czy są dostępne aktualizacje aplikacji.
Wymaga aktywnego połączenia internetowego.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="checkBoxAutoUpdates.Size" type="System.Drawing.Size, System.Drawing">
    <value>339, 21</value>
  </data>
  <data name="checkBoxAutoUpdates.Text" xml:space="preserve">
    <value>Automatycznie sprawdzaj dostępność aktualizacji</value>
  </data>
  <data name="checkBoxAutoUpdates.ToolTip" xml:space="preserve">
    <value>Gdy ta opcja jest aktywna program przy każdym uruchomieniu będzie sprawdzał
czy dostępne są aktualizacje oprogramowania.
Możesz wyłączyć tę opcję jeśli nie masz połączenia internetowego, nie chcesz
uaktualniać aplikacji lub gdy chcesz uaktualniać wyłącznie samodzielnie.

Domyślnie włączone.</value>
  </data>
  <data name="groupUpdate.Text" xml:space="preserve">
    <value>Aktualizacje</value>
  </data>
  <data name="groupUpdate.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="buttonRestart.Text" xml:space="preserve">
    <value>Zrestartuj teraz</value>
  </data>
  <data name="buttonRestart.ToolTip" xml:space="preserve">
    <value>Uruchamia aplikację ponownie. Niezapisana historia pomiarów zostanie utracona.</value>
  </data>
  <data name="labelRestart.Text" xml:space="preserve">
    <value>Wybrane zmiany zostaną w pełni zastosowane przy następnym uruchomieniu programu</value>
  </data>
  <data name="labelRestart.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="labelResultsSize.Text" xml:space="preserve">
    <value> Obszar wyników:</value>
  </data>
  <data name="labelResultsSize.ToolTip" xml:space="preserve">
    <value>Ustawia rozmiar elementów interface'u testowanej strzały.

Pełne zmiany wymagają ponownego uruchomienia aplikacji.</value>
  </data>
  <data name="comboBoxResultsSize.Items" xml:space="preserve">
    <value>Domyślny rozmiar</value>
  </data>
  <data name="comboBoxResultsSize.ToolTip" xml:space="preserve">
    <value>Ustawia rozmiar elementów interface'u testowanej strzały.

Pełne zmiany wymagają ponownego uruchomienia aplikacji.</value>
  </data>
  <data name="labelColorScheme.Text" xml:space="preserve">
    <value>Schemat kolorów:</value>
  </data>
  <data name="labelColorScheme.ToolTip" xml:space="preserve">
    <value>Ustawia schemat kolorów interface'u aplikacji.

Pełne zmiany wymagają ponownego uruchomienia aplikacji.</value>
  </data>
  <data name="comboBoxColorScheme.Items" xml:space="preserve">
    <value>Domyślny</value>
  </data>
  <data name="comboBoxColorScheme.ToolTip" xml:space="preserve">
    <value>Ustawia schemat kolorów interface'u aplikacji.

Pełne zmiany wymagają ponownego uruchomienia aplikacji.</value>
  </data>
  <data name="labelLanguage.Text" xml:space="preserve">
    <value>Język:</value>
  </data>
  <data name="labelLanguage.ToolTip" xml:space="preserve">
    <value>Ustawia język interface'u aplikacji.

Pełne zmiany wymagają ponownego uruchomienia aplikacji.</value>
  </data>
  <data name="comboBoxLanguage.ToolTip" xml:space="preserve">
    <value>Ustawia język interface'u aplikacji.

Pełne zmiany wymagają ponownego uruchomienia aplikacji.</value>
  </data>
  <data name="groupBoxGeneral.Text" xml:space="preserve">
    <value>Ogólne</value>
  </data>
  <data name="groupBoxGeneral.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="checkBoxDebugMode.Size" type="System.Drawing.Size, System.Drawing">
    <value>147, 21</value>
  </data>
  <data name="checkBoxDebugMode.Text" xml:space="preserve">
    <value>Tryb debugowania</value>
  </data>
  <data name="checkBoxDebugMode.ToolTip" xml:space="preserve">
    <value>Ta opcja włącza tryb debugowania, z dodatkowymi technicznymi informacjami i powiadomieniami.

Raczej zostaw wyłączone, chyba że wiesz co robisz. ( ͡° ͜ʖ ͡°)</value>
  </data>
  <data name="groupBoxDiagnostics.Text" xml:space="preserve">
    <value>Diagnostyka</value>
  </data>
  <data name="groupBoxDiagnostics.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="checkBoxConfirmHistoryRemove.Size" type="System.Drawing.Size, System.Drawing">
    <value>302, 21</value>
  </data>
  <data name="checkBoxConfirmHistoryRemove.Text" xml:space="preserve">
    <value>Przy usuwaniu najnowszego wpisu z historii</value>
  </data>
  <data name="checkBoxConfirmHistoryRemove.ToolTip" xml:space="preserve">
    <value>Gdy ta opcja jest aktywna będziesz musieć potwierdzić chęć usunięcia najnowszego
wpisu z historii pomiarów.

Domyślnie wyłączone.</value>
  </data>
  <data name="checkBoxConfirmHistoryClear.Size" type="System.Drawing.Size, System.Drawing">
    <value>227, 21</value>
  </data>
  <data name="checkBoxConfirmHistoryClear.Text" xml:space="preserve">
    <value>Przy próbie czyszczenia historii</value>
  </data>
  <data name="checkBoxConfirmHistoryClear.ToolTip" xml:space="preserve">
    <value>Gdy ta opcja jest aktywna będziesz musieć potwierdzić chęć wyczyszczenia historii pomiarów.

Gdy jest wyłączona, historia zostanie wyczyszczona bez dodatkowej konieczności potwierdzania.
Domyślnie włączone.</value>
  </data>
  <data name="checkBoxNotifySaveLoad.Size" type="System.Drawing.Size, System.Drawing">
    <value>306, 21</value>
  </data>
  <data name="checkBoxNotifySaveLoad.Text" xml:space="preserve">
    <value>Po udanym zapisie/odczycie/eksporcie pliku</value>
  </data>
  <data name="checkBoxNotifySaveLoad.ToolTip" xml:space="preserve">
    <value>Gdy ta opcja jest włączona otrzymasz powiadomienie za każdym razem gdy zapisywanie
odczytywanie i eksport pliku zakończą się pomyślnie.

Gdy jest wyłączona, otrzymasz powiadomienia tylko w przypadku niepowodzenia.
Domyślnie włączone.</value>
  </data>
  <data name="groupBoxNotifications.Text" xml:space="preserve">
    <value>Powiadomienia</value>
  </data>
  <data name="groupBoxNotifications.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="checkBoxSimplifiedConnection.Size" type="System.Drawing.Size, System.Drawing">
    <value>266, 21</value>
  </data>
  <data name="checkBoxSimplifiedConnection.Text" xml:space="preserve">
    <value>Uproszczone informacje o połączeniu</value>
  </data>
  <data name="checkBoxSimplifiedConnection.ToolTip" xml:space="preserve">
    <value>Gdy ta opcja jest aktywna, nie będziesz widzieć dodatkowych komunikatów o aktualnym
stanie urządzenia jak "Testowanie spinu 1..." czy "Waga zapisana" znajdujących się przy panelu połączenia.
Nie będziesz też widzieć tekstowych podpowiedzi typu "Dociśnij strzałę" czy "Zdejmij strzałę" pod statusem
połączenia.

Domyślnie wyłączone.</value>
  </data>
  <data name="checkBoxShowFOC.Size" type="System.Drawing.Size, System.Drawing">
    <value>363, 21</value>
  </data>
  <data name="checkBoxShowFOC.Text" xml:space="preserve">
    <value>Wyświetl FOC (przesunięcie środka ciężkości strzały)</value>
  </data>
  <data name="checkBoxShowFOC.ToolTip" xml:space="preserve">
    <value>Gdy ta opcja jest włączona w Panelu Wagi pojawi się informacja o FOC (przesunięciu środka ciężkości) strzały.

Wartość będzie poprawna tylko wtedy, gdy urządzenie będzie wypoziomowane, a strzała wyśrodkowana na urządzeniu,
czyli ułożona tak, aby taka sama długość promienia strzały wystawała poza kazdy wspornik (senosor).
Lub, inaczej mówiąc, by środek długości strzały znajdował się dokładnie pod centralnym stycznikiem urządzenia.

Domyślnie wyłączone.</value>
  </data>
  <data name="groupBoxConnection.Text" xml:space="preserve">
    <value>Łączność</value>
  </data>
  <data name="groupBoxConnection.ToolTip" xml:space="preserve">
    <value />
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Ustawienia</value>
  </data>
  <data name="$this.ToolTip" xml:space="preserve">
    <value />
  </data>
</root>